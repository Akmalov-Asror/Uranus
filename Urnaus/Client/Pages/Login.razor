@page "/login"
@using System.Net

@using Urnaus.Client.Dto_s
@inject NavigationManager NavigationManager
@inject HttpClient Http
@using System.Text.Json
@inject IJSRuntime JsRuntime

<PageTitle>Login</PageTitle>

<head>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            list-style: none;
            text-decoration: none !important;
        }

        header {
            box-shadow: 0px 10px 40px 0px rgba(61, 174, 223, 0.10);
            padding: 20px 0
        }

        a {
            text-decoration: none;
            cursor: pointer;
        }

        p {
            margin: 0;
        }

        .container-s {
            max-width: 620px;
            margin: 0 auto;
        }

        .logo {
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .logo img {
                width: 42px;
                height: 42px;
            }

            .logo h1 {
                margin: 0;
            }

        .registration {
            margin-top: 60px;
            margin-bottom: 60px;
        }

        .registration__container {
            border: 1px solid #DFDFDF;
        }

        .auth {
            display: flex;
        }

            .auth a {
                width: 50%;
                text-align: center;
                padding: 19px 59px;
                font-size: 18px;
                color: #404040;
                font-weight: 400;
                cursor: pointer;
            }

        .auth--active {
            color: #000 !important;
            font-weight: 700 !important;
        }

        .auth--not {
            background-color: #f9f9f9;
            border-right: 1px solid #DFDFDF;
            border-bottom: 1px solid #DFDFDF;
        }

        .registration__fields {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 20px;
        }

            .registration__fields h1 {
                margin-top: 50px;
                margin-bottom: 20px;
                font-size: 28px;
            }

            .registration__fields input {
                width: 460px;
                padding: 17px 30px;
                border-radius: 8px;
                border: 1px solid #000;
                opacity: 0.66;
            }

            .registration__fields p {
                width: 460px;
                line-height: 21px;
            }

                .registration__fields p a {
                    color: #113BA1;
                }

        .login {
            padding: 14px 75px;
            background-color: #35A4D9;
            color: #fff;
            border-radius: 10px;
            margin-top: 20px;
        }

        .forget__password {
            color: #113BA1;
            font-size: 18px;
            cursor: pointer;
        }

        input:focus {
            outline: none;
        }

        .oauth {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 20px;
        }

        .social {
            display: flex;
            padding: 15px 33px;
            gap: 12px;
            box-shadow: 0px 10px 40px 0px rgba(17, 59, 161, 0.10);
            border-radius: 10px;
            cursor: pointer;
        }

        .no_account {
            margin-top: 80px;
            margin-bottom: 60px;
            text-align: center;
        }

            .no_account a {
                color: #113BA1 !important;
                cursor: pointer;
            }
    </style>
</head>
<header>
    <div class="logo">
        <img src="https://devel.prom.uz/upload/organization_logos/ee/6e/ee6e2d1fa54c427cb384776ce3891061.png" alt="">
        <h1>URANUS</h1>
    </div>
</header>
<section class="registration">
    <div class="container-s registration__container">
        <div class="auth">
            <a @onclick="SignUp" class="auth--not">Зарегистрироваться</a>
            <a @onclick="SignIn" class="auth--active">Войти</a>
        </div>
        <div class="registration__fields">
            <h1>Войти в аккаунт</h1>
            <input type="text" placeholder="Email" @bind="loginDto.Email">
            <input type="password" placeholder="Пароль" @bind="loginDto.Password">
            <p>By clicking Sign In, you agree to our <a href="">Terms of Use</a> and our <a href="">Privacy Policy</a>.</p>
            <a class="login" @onclick="OnValidSubmit">Войти</a>
            <a @onclick="ToSendEmail" class="forget__password">Забыли пароль?</a>
        </div>
        <div style="display: flex; justify-content: center; align-items: center; margin-top: 47px; margin-bottom: 43px; opacity: 0.44;">
            <hr style="width: 50%; border: 1px solid black; margin-left: 80px; margin-right: 20px;">
            <p>или</p>
            <hr style="width: 50%; border: 1px solid black; margin-left: 20px; margin-right: 80px;">
        </div>
        <div class="oauth">
            <div class="social">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
                    <g clip-path="url(#clip0_1_4825)">
                        <path d="M6.8667 0.53315C4.40003 1.33315 2.2667 3.19982 1.0667 5.46648C0.6667 6.33315 0.400033 7.13315 0.200033 7.99982C-0.266633 10.1998 0.0666999 12.4665 1.0667 14.4665C1.73337 15.7332 2.6667 16.9332 3.8667 17.7998C4.93337 18.6665 6.20003 19.2665 7.60003 19.5998C9.33337 20.0665 11.1334 20.0665 12.8 19.6665C14.3334 19.3332 15.8 18.5998 17 17.5331C18.2667 16.3998 19.1334 14.9332 19.6 13.3998C20.1334 11.6665 20.2 9.86648 19.8667 8.06648C16.6667 8.06648 13.4667 8.06648 10.2667 8.06648C10.2667 9.39982 10.2667 10.6665 10.2667 11.9998C12.1334 11.9998 14 11.9998 15.8 11.9998C15.6 13.2665 14.8 14.3998 13.7334 15.0665C13.0667 15.5332 12.2667 15.7998 11.4667 15.9332C10.6667 16.0665 9.80003 16.0665 9.00003 15.9332C8.20003 15.7998 7.40003 15.4665 6.73337 14.9998C5.6667 14.2665 4.80003 13.1332 4.40003 11.9332C3.93337 10.6665 3.93337 9.26648 4.40003 8.06648C4.73337 7.19982 5.20003 6.39982 5.8667 5.73315C6.6667 4.93315 7.73337 4.33315 8.93337 4.06648C9.93337 3.86648 10.9334 3.93315 11.9334 4.19982C12.7334 4.46648 13.5334 4.86648 14.1334 5.46648C14.7334 4.86648 15.4 4.26648 16 3.59982C16.3334 3.26648 16.6667 2.93315 17 2.59982C16.0667 1.73315 14.9334 1.06648 13.7334 0.599816C11.5334 -0.200184 9.0667 -0.200184 6.8667 0.53315Z" fill="white" />
                        <path d="M6.86671 0.533149C9.06671 -0.200184 11.5334 -0.200184 13.7334 0.599816C14.9334 1.06648 16.0667 1.73315 17 2.59982C16.6667 2.93315 16.3334 3.26648 16 3.59982C15.4 4.19982 14.7334 4.79982 14.1334 5.46648C13.5334 4.86648 12.7334 4.46648 11.9334 4.19982C11 3.93315 9.93338 3.86648 8.93338 4.06648C7.80004 4.33315 6.73338 4.86648 5.86671 5.73315C5.20004 6.39982 4.66671 7.19982 4.40004 8.06648C3.26671 7.19982 2.20004 6.39982 1.06671 5.53315C2.26671 3.19982 4.40004 1.39982 6.86671 0.533149Z" fill="#EA4335" />
                        <path d="M0.200033 7.99987C0.400033 7.1332 0.6667 6.26654 1.0667 5.5332C2.20003 6.39987 3.2667 7.19987 4.40003 8.06654C3.93337 9.3332 3.93337 10.7332 4.40003 11.9332C3.2667 12.7999 2.20003 13.5999 1.0667 14.4665C0.0666999 12.5332 -0.266633 10.1999 0.200033 7.99987Z" fill="#FBBC05" />
                        <path d="M10.2 8.1333C13.4 8.1333 16.6 8.1333 19.8 8.1333C20.1333 9.86663 20.0667 11.7333 19.5333 13.4666C19.0667 15.0666 18.2 16.5333 16.9333 17.6C15.8667 16.8 14.8 15.9333 13.6667 15.1333C14.7333 14.4 15.4667 13.2666 15.7333 12.0666C13.8667 12.0666 12 12.0666 10.2 12.0666C10.2 10.7333 10.2 9.39997 10.2 8.1333Z" fill="#4285F4" />
                        <path d="M1.06671 14.4664C2.20004 13.5998 3.26671 12.7998 4.40004 11.9331C4.80004 13.1331 5.66671 14.2664 6.73338 14.9998C7.40004 15.4664 8.20004 15.7998 9.00004 15.9331C9.80004 16.0664 10.6 16.0664 11.4667 15.9331C12.2667 15.7998 13.0667 15.5331 13.7334 15.0664C14.8 15.8664 15.8667 16.7331 17 17.5331C15.8 18.5998 14.4 19.3331 12.8 19.6664C11.0667 20.0664 9.26671 20.0664 7.60004 19.5998C6.26671 19.2664 5.00004 18.5998 3.86671 17.7998C2.73338 16.9331 1.73338 15.7998 1.06671 14.4664Z" fill="#34A853" />
                    </g>
                    <defs>
                        <clipPath id="clip0_1_4825">
                            <rect width="20" height="20" fill="white" />
                        </clipPath>
                    </defs>
                </svg>
                <p>Войти с Google</p>
            </div>
            <div class="social">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
                    <g clip-path="url(#clip0_1_4835)">
                        <path d="M18.8667 0H1.13333C0.466667 0 0 0.466667 0 1.13333V18.9333C0 19.5333 0.466667 20 1.13333 20H10.6667V12.2667H8.06667V9.26667H10.6667V7.06667C10.6667 4.46667 12.2667 3.06667 14.5333 3.06667C15.6667 3.06667 16.6 3.13333 16.8667 3.2V5.86667H15.2667C14 5.86667 13.8 6.46667 13.8 7.33333V9.26667H16.8L16.4 12.2667H13.8V20H18.8667C19.4667 20 20 19.5333 20 18.8667V1.13333C20 0.466667 19.5333 0 18.8667 0Z" fill="#3C5B9A" />
                    </g>
                    <defs>
                        <clipPath id="clip0_1_4835">
                            <rect width="20" height="20" fill="white" />
                        </clipPath>
                    </defs>
                </svg>
                <p>Войти с Facebook</p>
            </div>
        </div>
        <p class="no_account">Нет аккаунта? <a @onclick="SignUp">Зарегистрироваться</a></p>
    </div>
</section>
@code {
    private CheckLogin loginDto = new CheckLogin();
    protected void Redirect(string s = "/login") => NavigationManager.NavigateTo(s);

    void ToSendEmail()
    {
        NavigationManager.NavigateTo("/password");
    }

    void SignIn()
    {
        NavigationManager.NavigateTo("/login");
    }

    void SignUp()
    {
        NavigationManager.NavigateTo("/registration");
    }

    async Task OnValidSubmit()
    {
        var response = await Http.PostAsJsonAsync("/api/Login", loginDto);


        if (response.IsSuccessStatusCode)
        {
            var json = await response.Content.ReadAsStringAsync();

            using (JsonDocument doc = JsonDocument.Parse(json))
            {
                JsonElement root = doc.RootElement;

                if (root.TryGetProperty("email", out JsonElement emailElement))
                {
                    string email = emailElement.GetString()!;


                    await SaveToLocalStorage("email", email);
                }
            }

            NavigationManager.NavigateTo("/usersCourse");
        }
    }

    private async Task SaveToLocalStorage(string key, string value)
    {
        await JsRuntime.InvokeVoidAsync("localStorage.setItem", key, value);
    }
}