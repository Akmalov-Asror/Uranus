@page "/usersCourse"
@using Urnaus.Shared
@using Task = System.Threading.Tasks.Task
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject IJSRuntime JsRuntime
<PageTitle>Uranus</PageTitle>

<head>
    <script src="https://kit.fontawesome.com/82de9758c4.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            list-style: none;
            text-decoration: none;
        }

        .container-s {
            max-width: 1200px;
            margin: 0 auto;
        }

        ul {
            margin-bottom: 0;
            padding: 0 !important;
        }

        a {
            color: #000;
            text-decoration: none;
            cursor: pointer;
        }

        header {
            background-color: #fff;
        }

        .header__container {
            padding: 14px 0;
            display: flex;
            align-items: center;
        }

            .header__container img {
                margin: 0 auto;
            }

        .header__list {
            display: flex;
            gap: 30px;
        }

        .header__auth {
            display: flex;
            gap: 20px;
            align-items: center;
            margin-left: auto;
        }

        .auth-registration {
            padding: 10px 34px;
            color: #fff;
            background-color: #35A4D9;
            border-radius: 6px;
        }

        .header__logo {
            display: flex;
            align-items: center;
            margin-right: auto;
            cursor: pointer;
        }

        .header__auth a {
            cursor: pointer;
        }

        .header__logo img {
            width: 42px;
            height: 42px;
        }

        .active {
            color: #113BA1;
        }

        .contact__bg {
            background-image: url(https://www.shutterstock.com/image-photo/elearning-online-education-concept-learn-260nw-2056510169.jpg);
            background-repeat: no-repeat;
            background-size: cover;
            background-position: center;
            height: 300px;
        }

            .contact__bg h1 {
                text-align: center;
                font-size: 62px;
                padding-top: 100px;
                color: white;
            }

        .section__course {
            margin-top: 108px;
            margin-bottom: 150px;
        }

        .course__title {
            color: #000;
            font-size: 42px;
            text-align: center;
            margin-bottom: 72px;
        }

        .row {
            display: flex;
            gap: 30px;
            justify-content: center;
        }

        .col-4 {
            width: 380px;
            display: flex;
            flex-direction: column;
            gap: 10px;
            box-shadow: 0px 4px 50px 0px rgba(0, 0, 0, 0.10);
            padding: 0;
            cursor: pointer;
        }

            .col-4 img {
                width: 380px;
            }

            .col-4 h6 {
                color: #000;
                font-size: 24px;
                padding-left: 30px;
                margin: 0;
            }

            .col-4 p {
                padding-left: 30px;
                color: #000;
                font-size: 14px;
                padding-bottom: 25px;
            }

        .footer {
            background: #111;
            color: #949393 !important;
        }

        .footer__container {
            display: flex;
            gap: 250px;
            padding-top: 70px;
            padding-bottom: 54px;
        }

        .footer__item {
            display: flex;
            flex-direction: column;
            gap: 18px;
        }

        .footer__logo {
            display: flex;
            align-items: center;
            gap: 10px;
            cursor: pointer;
        }

        .footer__item img {
            width: 42px;
            height: 42px;
            border-radius: 50%;
        }

        .footer h6 {
            color: #fff;
        }

        .footer h1 {
            color: #fff;
        }

        h1 {
            margin: 0;
        }

        p {
            margin: 0;
        }

        .footer__p {
            text-align: center;
            color: #545454;
            font-size: 12px;
            padding-bottom: 24px;
        }

        .social__logo {
            display: flex;
            gap: 20px;
            padding-top: 30px;
            cursor: pointer;
        }

        .footer__item a {
            cursor: pointer;
        }

        .social__logo {
            cursor: pointer;
        }

        .load {
            width: 320px;
            padding: 20px 100px;
            background-color: #35A4D9;
            color: white;
            border-radius: 10px;
            text-align: center;
            cursor: pointer;
        }

        .container-s {
            max-width: 1200px;
            margin: 0 auto;
        }

        .header__container {
            padding: 14px 0;
            display: flex;
            align-items: center;
        }

            .header__container img {
                margin: 0 auto;
            }

        .header__list {
            display: flex;
            gap: 30px;
        }

        .header__auth {
            display: flex;
            gap: 20px;
            align-items: center;
            margin-left: auto;
        }

            .header__auth a {
                cursor: pointer;
            }

        .header__logo {
            display: flex;
            align-items: center;
            margin-right: auto;
            cursor: pointer;
        }

        .contact__bg {
            background-image: url(https://thumbs.dreamstime.com/z/homework-word-writkboard-text-books-school-books-38372083.jpg?w=992);
            background-repeat: no-repeat;
            background-size: cover;
            background-position: top;
            /* filter: brightness(40%); */
            height: 300px;
        }

            .contact__bg h1 {
                text-align: center;
                font-size: 62px;
                padding-top: 100px;
                color: black;
            }

        .footer {
            background: #111;
            color: #949393 !important;
        }

        .footer__container {
            display: flex;
            gap: 250px;
            padding-top: 70px;
            padding-bottom: 54px;
        }

        .footer__item {
            display: flex;
            flex-direction: column;
            gap: 18px;
        }

        .footer__logo {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .footer__item img {
            width: 42px;
            height: 42px;
            border-radius: 50%;
        }

        .footer h6 {
            color: #fff;
        }

        .footer h1 {
            color: #fff;
        }

        h1 {
            margin: 0;
        }

        p {
            margin: 0;
        }

        .footer__p {
            text-align: center;
            color: #545454;
            font-size: 12px;
            padding-bottom: 24px;
        }

        .social__logo {
            display: flex;
            gap: 20px;
            padding-top: 30px;
        }

        .footer__item a {
            cursor: pointer;
            color: #949393;
        }

        .social__logo {
            cursor: pointer;
        }

        /* .content {
            margin-top: 100px;
            margin-bottom: 130px;
        } */

        .content__title {
            font-size: 32px;
            margin-bottom: 24px;
        }

        .content__descr {
            margin-top: 20px;
            font-size: 18px;
            line-height: 28px;
            font-weight: 400;
            margin-bottom: 50px;
        }

        .answer {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 80px;
        }

            .answer div {
                position: relative;
                width: 900px;
                height: 400px;
                border: 3px solid #000;
                border-radius: 15px;
                opacity: 0.5;
                text-align: left;
                overflow: hidden;
                text-indent: 0%;
            }

            .answer textarea {
                width: 900px;
                height: 400px;
                position: absolute;
                right: 0;
                left: 0;
                bottom: 0;
                top: 0;
                padding: 30px;
            }

                .answer textarea:focus {
                    outline: none;
                }

            .answer button {
                padding: 24px 64px;
                background-color: #35A4D9;
                border-radius: 10px;
                border: none;
                color: #fff;
                cursor: pointer;
                margin-bottom: 100px;
            }

        .remark {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .remark__title {
            font-size: 28px !important;
            font-weight: 500 !important;
        }

        .remark p {
            font-size: 18px;
            font-weight: 400;
        }

        .remark__content {
            display: flex;
            flex-direction: column;
            gap: 43px;
        }

        .img-item {
            width: 100%;
        }

        .text-title {
            padding-bottom: 60px;
        }

        .images-items {
            display: flex;
            width: 409px;
            gap: 56px;
            height: 450px;
            padding-bottom: 60px;
        }

        .Txt-items {
            display: flex;
            justify-content: space-between;
            padding-bottom: 40px;
        }

    </style>
</head>

<header>
    <div class="container-s">
        <div class="header__container">
            <div @onclick="ToMain" class="header__logo">
                <img src="https://devel.prom.uz/upload/organization_logos/ee/6e/ee6e2d1fa54c427cb384776ce3891061.png" alt="">
                <h1>URANUS</h1>
            </div>
            <ul class="header__list">
                <li>
                    <a @onclick="ToCourses">Все курсы</a>
                </li>
                <li>
                    <a href="">Мои курсы</a>
                </li>
                <li>
                    <a @onclick="HomeworkPage">Домашние задания</a>
                </li>
                <li>
                    <a @onclick="ToAbout" class="active">О нас</a>
                </li>
                <li>
                    <a @onclick="ToContact">Контакты</a>
                </li>
            </ul>
            <div class="header__auth">
                <a @onclick="ToLogin">Войти</a>
                <a @onclick="ToReg" class="auth-registration">Регистрация</a>
            </div>
        </div>
    </div>
</header>
<section class="contact__bg">
    <h1>Мои курсы</h1>
</section>
<section class="section__course">
    <div class="container">
        <h1 class="course__title">Мои курсы</h1>
        <div class="row">
            @if (courses.Count <= 0)
            {
                <h1>No courses...</h1>
            }
            else
            {
                @foreach (var course in courses.Take(displayCount))
                {
                    <div @onclick="UserTask" class="col-4">
                        <img src="@course.ImageUrl" alt="@course.Title">
                        <h6>@course.Title</h6>
                        <p>@course.Description</p>
                    </div>
                }
            }
            @if (displayCount < courses.Count)
            {
                <a @onclick="LoadMore" class="load">Загрузить еще</a>
            }
        </div>
    </div>
</section>
<footer class="footer">
    <div class="container">
        <div class="footer__container">
            <div class="footer__item">
                <div @onclick="ToMain" class="footer__logo">
                    <img src="https://devel.prom.uz/upload/organization_logos/ee/6e/ee6e2d1fa54c427cb384776ce3891061.png" alt="">
                    <h1>URANUS</h1>
                </div>
                <div class="social__logo">
                    <i class="fa-brands fa-facebook fa-2xl"></i>
                    <i class="fa-brands fa-instagram fa-2xl"></i>
                    <i class="fa-brands fa-telegram fa-2xl"></i>
                </div>
            </div>
            <div class="footer__item">
                <h6>ИНФОРМАЦИЯ</h6>
                <a>Все курсы</a>
                <a>Результаты учеников</a>
                <a>О компании</a>
            </div>
            <div class="footer__item">
                <h6>КОНТАКТЫ</h6>
                <p>+998 98 369 90 69</p>
                <p>info@uranusinvest.com</p>
                <p>Location</p>
            </div>
        </div>
        <p class="footer__p">
            ©
            2021 Uranus Invest
        </p>
    </div>
</footer>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"></script>

@code {
    private int displayCount = 15;
    string result;

    private void LoadMore() => displayCount += 6;

    private string UserEmail { get; set; } = string.Empty;
    List<Course> courses = new List<Course>();

    private async System.Threading.Tasks.Task GetEmailFromLocalStorage()
    {
        var email = await JsRuntime.InvokeAsync<string>("localStorage.getItem", "email");

        if (!string.IsNullOrEmpty(email))
        {
            UserEmail = email;
            Console.WriteLine(UserEmail);
        }
    }

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        await GetEmailFromLocalStorage();
        if (string.IsNullOrEmpty(UserEmail))
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            
            var result = await Http.GetFromJsonAsync<List<Course>>("/api/User/getCourse?email=" + UserEmail);
            Console.WriteLine(result);
            if (result != null)
            {
                courses = result;
            }
        }
    }

    void UserTask()
    {
        NavigationManager.NavigateTo("/task");
    }

    private async System.Threading.Tasks.Task ClearLocalStorage()
    {
        await JsRuntime.InvokeVoidAsync("clearLocalStorage");
    }


    void ToLogin()
    {
        NavigationManager.NavigateTo("/login");
    }

    void ToReg()
    {
        NavigationManager.NavigateTo("/registration");
    }

    void ToMain()
    {
        NavigationManager.NavigateTo("/");
    }

    void ToContact()
    {
        NavigationManager.NavigateTo("/contact");
    }

    void ToAbout()
    {
        NavigationManager.NavigateTo("/aboutus");
    }
    void HomeworkPage()
    {
        NavigationManager.NavigateTo("/homework");
    }
    void ToCourses()
    {
        NavigationManager.NavigateTo("/allcourses");
    }
}